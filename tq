[1mdiff --git a/Examples/tabbedPagerCarousel/react-native-viewpager-carousel/Page.js b/Examples/tabbedPagerCarousel/react-native-viewpager-carousel/Page.js[m
[1mdeleted file mode 100644[m
[1mindex 643712a..0000000[m
[1m--- a/Examples/tabbedPagerCarousel/react-native-viewpager-carousel/Page.js[m
[1m+++ /dev/null[m
[36m@@ -1,81 +0,0 @@[m
[31m-import React, { PureComponent } from 'react'[m
[31m-import { [m
[31m-  View,[m
[31m-  StyleSheet,[m
[31m-} from 'react-native'[m
[31m-[m
[31m-class Page extends PureComponent {[m
[31m-[m
[31m-  constructor(props) {[m
[31m-    super(props)[m
[31m-[m
[31m-    this.pageNumber = props.pageNumber[m
[31m-  }[m
[31m-  [m
[31m-  shouldComponentUpdate(nextProps) {[m
[31m-[m
[31m-    this.pageNumber = nextProps.pageNumber[m
[31m-[m
[31m-    return nextProps.shouldUpdate[m
[31m-  }[m
[31m-[m
[31m-  _souldSwitchPage = () => {[m
[31m-    this.props.shoudSwitchPage(this.props.pageNumber)[m
[31m-  }[m
[31m-[m
[31m-  onIsPanning = isPanning => {[m
[31m-    if (typeof this.child.setNativeProps == 'function')[m
[31m-      this.child.setNativeProps(isPanning ? {[m
[31m-        shouldBeScrollable: false,[m
[31m-      } : {[m
[31m-        shouldBeScrollable: true,[m
[31m-      })[m
[31m-  }[m
[31m-[m
[31m-  _renderChild = () => {[m
[31m-[m
[31m-    const child = React.cloneElement([m
[31m-      this.props.renderChild({[m
[31m-        data: this.props.childData, [m
[31m-        shouldSwitchPage: this._souldSwitchPage,[m
[31m-      }),[m
[31m-      {[m
[31m-        ref: node => {[m
[31m-          this.child = node[m
[31m-        },[m
[31m-      }[m
[31m-    )[m
[31m-[m
[31m-    return child[m
[31m-  }[m
[31m-[m
[31m-  render() {[m
[31m-    return ([m
[31m-      <View[m
[31m-        style={styles.rowContainer}[m
[31m-      >[m
[31m-        {this._renderChild()}[m
[31m-      </View>[m
[31m-    )[m
[31m-  }[m
[31m-[m
[31m-}[m
[31m-[m
[31m-[m
[31m-const styles = StyleSheet.create({[m
[31m-  rowContainer: {[m
[31m-    flex: 1,[m
[31m-  },[m
[31m-})[m
[31m-[m
[31m-Page.propTypes = {[m
[31m-  shouldUpdate: React.PropTypes.bool,[m
[31m-  children: React.PropTypes.any,[m
[31m-  childData: React.PropTypes.object,[m
[31m-  pageNumber: React.PropTypes.number,[m
[31m-[m
[31m-  shoudSwitchPage: React.PropTypes.func,[m
[31m-  renderChild: React.PropTypes.func,[m
[31m-}[m
[31m-[m
[31m-export default Page[m
\ No newline at end of file[m
[1mdiff --git a/Examples/tabbedPagerCarousel/react-native-viewpager-carousel/TabbedPager.js b/Examples/tabbedPagerCarousel/react-native-viewpager-carousel/TabbedPager.js[m
[1mindex 167caa6..0801e3f 100644[m
[1m--- a/Examples/tabbedPagerCarousel/react-native-viewpager-carousel/TabbedPager.js[m
[1m+++ b/Examples/tabbedPagerCarousel/react-native-viewpager-carousel/TabbedPager.js[m
[36m@@ -9,7 +9,6 @@[m [mimport {[m
 [m
 import ViewPager from './ViewPager'[m
 [m
[31m-[m
 const VIEWPORT_WIDTH = Dimensions.get('window').width[m
 [m
 class TabbedPager extends PureComponent {[m
[1mdiff --git a/src/Page.js b/src/Page.js[m
[1mdeleted file mode 100644[m
[1mindex 643712a..0000000[m
[1m--- a/src/Page.js[m
[1m+++ /dev/null[m
[36m@@ -1,81 +0,0 @@[m
[31m-import React, { PureComponent } from 'react'[m
[31m-import { [m
[31m-  View,[m
[31m-  StyleSheet,[m
[31m-} from 'react-native'[m
[31m-[m
[31m-class Page extends PureComponent {[m
[31m-[m
[31m-  constructor(props) {[m
[31m-    super(props)[m
[31m-[m
[31m-    this.pageNumber = props.pageNumber[m
[31m-  }[m
[31m-  [m
[31m-  shouldComponentUpdate(nextProps) {[m
[31m-[m
[31m-    this.pageNumber = nextProps.pageNumber[m
[31m-[m
[31m-    return nextProps.shouldUpdate[m
[31m-  }[m
[31m-[m
[31m-  _souldSwitchPage = () => {[m
[31m-    this.props.shoudSwitchPage(this.props.pageNumber)[m
[31m-  }[m
[31m-[m
[31m-  onIsPanning = isPanning => {[m
[31m-    if (typeof this.child.setNativeProps == 'function')[m
[31m-      this.child.setNativeProps(isPanning ? {[m
[31m-        shouldBeScrollable: false,[m
[31m-      } : {[m
[31m-        shouldBeScrollable: true,[m
[31m-      })[m
[31m-  }[m
[31m-[m
[31m-  _renderChild = () => {[m
[31m-[m
[31m-    const child = React.cloneElement([m
[31m-      this.props.renderChild({[m
[31m-        data: this.props.childData, [m
[31m-        shouldSwitchPage: this._souldSwitchPage,[m
[31m-      }),[m
[31m-      {[m
[31m-        ref: node => {[m
[31m-          this.child = node[m
[31m-        },[m
[31m-      }[m
[31m-    )[m
[31m-[m
[31m-    return child[m
[31m-  }[m
[31m-[m
[31m-  render() {[m
[31m-    return ([m
[31m-      <View[m
[31m-        style={styles.rowContainer}[m
[31m-      >[m
[31m-        {this._renderChild()}[m
[31m-      </View>[m
[31m-    )[m
[31m-  }[m
[31m-[m
[31m-}[m
[31m-[m
[31m-[m
[31m-const styles = StyleSheet.create({[m
[31m-  rowContainer: {[m
[31m-    flex: 1,[m
[31m-  },[m
[31m-})[m
[31m-[m
[31m-Page.propTypes = {[m
[31m-  shouldUpdate: React.PropTypes.bool,[m
[31m-  children: React.PropTypes.any,[m
[31m-  childData: React.PropTypes.object,[m
[31m-  pageNumber: React.PropTypes.number,[m
[31m-[m
[31m-  shoudSwitchPage: React.PropTypes.func,[m
[31m-  renderChild: React.PropTypes.func,[m
[31m-}[m
[31m-[m
[31m-export default Page[m
\ No newline at end of file[m
[1mdiff --git a/src/TabbedPager.js b/src/TabbedPager.js[m
[1mindex 2b4d91b..0801e3f 100644[m
[1m--- a/src/TabbedPager.js[m
[1m+++ b/src/TabbedPager.js[m
[36m@@ -3,11 +3,12 @@[m [mimport {[m
   StyleSheet,[m
   Dimensions,[m
   View,[m
[32m+[m[32m  ScrollView,[m
[32m+[m[32m  Text,[m
 } from 'react-native'[m
 [m
 import ViewPager from './ViewPager'[m
 [m
[31m-[m
 const VIEWPORT_WIDTH = Dimensions.get('window').width[m
 [m
 class TabbedPager extends PureComponent {[m
[36m@@ -99,7 +100,7 @@[m [mclass TabbedPager extends PureComponent {[m
             this.contentPager = contentPager[m
           }}[m
           data={this.props.data}[m
[31m-          contentContainerStyle={styles.contentContainer}[m
[32m+[m[32m          containerStyle={styles.contentContainer}[m
           renderRow={this._renderContentContainerRow}[m
           onPageChange={this._onPageChange}[m
           onScroll={this._onScroll}[m
[36m@@ -117,7 +118,7 @@[m [mconst styles = StyleSheet.create({[m
     flex: 1,[m
   },[m
   contentContainer: {[m
[31m-    //flex: 1,[m
[32m+[m[32m    flex: 1,[m
   },[m
 })[m
 [m
[1mdiff --git a/src/ViewPager.js b/src/ViewPager.js[m
[1mindex 62062ad..e0c64ef 100644[m
[1m--- a/src/ViewPager.js[m
[1m+++ b/src/ViewPager.js[m
[36m@@ -122,7 +122,9 @@[m [mclass ViewPager extends PureComponent {[m
 [m
   _renderRow = ({item}) => {[m
     return ([m
[31m-      <View style={{flex: 1}}>[m
[32m+[m[32m      <View style={{[m
[32m+[m[32m        width: this.props.pageWidth,[m
[32m+[m[32m      }}>[m
         {this.props.renderRow({data: item})}[m
       </View>[m
     )[m
[36m@@ -131,21 +133,23 @@[m [mclass ViewPager extends PureComponent {[m
   render() {[m
     this.pages = [][m
     return ([m
[31m-      <ScrollView[m
[31m-        ref={(scrollView) => {[m
[31m-          this.scrollView = scrollView[m
[31m-        }}[m
[31m-        horizontal={true}[m
[31m-        pagingEnabled={this.props.pagingEnabled}[m
[31m-        onScroll={this._onScroll}[m
[31m-        contentContainerStyle={[styles.container, this.props.contentContainerStyle, {[m
[31m-          width: this.props.pageWidth * this.state.dataSource.length,[m
[31m-        }]}>[m
[31m-[m
[31m-        {this.state.dataSource.map((item) => {[m
[31m-          return this._renderRow({item})[m
[31m-        })}[m
[31m-      </ScrollView>[m
[32m+[m[32m      <View style={this.props.containerStyle}>[m
[32m+[m[32m        <ScrollView[m
[32m+[m[32m          ref={(scrollView) => {[m
[32m+[m[32m            this.scrollView = scrollView[m
[32m+[m[32m          }}[m
[32m+[m[32m          horizontal={true}[m
[32m+[m[32m          pagingEnabled={this.props.pagingEnabled}[m
[32m+[m[32m          onScroll={this._onScroll}[m
[32m+[m[32m          contentContainerStyle={[styles.container, this.props.contentContainerStyle, {[m
[32m+[m[32m            width: this.props.pageWidth * this.state.dataSource.length,[m
[32m+[m[32m          }]}>[m
[32m+[m
[32m+[m[32m          {this.state.dataSource.map((item) => {[m
[32m+[m[32m            return this._renderRow({item})[m
[32m+[m[32m          })}[m
[32m+[m[32m        </ScrollView>[m
[32m+[m[32m      </View>[m
     )[m
   }[m
 }[m
[36m@@ -161,14 +165,12 @@[m [mconst styles = StyleSheet.create({[m
      */[m
     overflow: 'scroll',[m
   },[m
[31m-  rowContainer: {[m
[31m-    flex: 1,[m
[31m-  },[m
 })[m
 [m
 [m
 ViewPager.propTypes = {[m
   contentContainerStyle: React.PropTypes.any,[m
[32m+[m[32m  containerStyle: React.PropTypes.any,[m
   data: React.PropTypes.arrayOf([m
     React.PropTypes.object[m
   ),[m
